{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/emmawv/practice/you-time/client/components/Products.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components'; // QUERY:\n// gql imports graphql-tag that turns our string into a proper graphQL query.\n\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      title\n      author\n      description\n      price\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n        altText\n      }\n    }\n  }\n`;\nconst ProductsListStyles = styled.div.withConfig({\n  displayName: \"Products__ProductsListStyles\",\n  componentId: \"sc-1uv5x8m-0\"\n})([\"display:grid;grid-template-columns:1fr 1fr 1fr;grid-gap:60px;text-align:center;\"]);\nconst ProductCard = styled.div.withConfig({\n  displayName: \"Products__ProductCard\",\n  componentId: \"sc-1uv5x8m-1\"\n})([\"display:flex;flex-direction:column;img{height:180px;width:110px;object-fit:cover;margin:10px auto;}h4{text-transform:uppercase;font-family:var(--titleFont);}\"]);\n\nconst Products = () => {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(ALL_PRODUCTS_QUERY); // useQuery returns data, errors and if it is currently loading so we destructure it.\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this); // TODO: Change for loader.\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsListStyles, {\n      children: data.allProducts.map(elm => /*#__PURE__*/_jsxDEV(ProductCard, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: elm.photo.image.publicUrlTransformed,\n          alt: elm.photo.altText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: elm.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'var(--cream)',\n            margin: '7px'\n          },\n          children: elm.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            backgroundColor: 'var(--cream)',\n            opacity: '0.4',\n            width: '30px',\n            margin: '0 auto',\n            height: '1px',\n            border: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, elm.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Products;","map":{"version":3,"sources":["/Users/emmawv/practice/you-time/client/components/Products.js"],"names":["useQuery","gql","styled","ALL_PRODUCTS_QUERY","ProductsListStyles","div","ProductCard","Products","data","error","loading","message","allProducts","map","elm","photo","image","publicUrlTransformed","altText","title","color","margin","author","backgroundColor","opacity","width","height","border","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;;AACA,MAAMC,kBAAkB,GAAGF,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,MAAMG,kBAAkB,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,uFAAxB;AAOA,MAAMC,WAAW,GAAGJ,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,qKAAjB;;AAiBA,MAAME,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BV,QAAQ,CAACG,kBAAD,CAAzC,CADqB,CAC0C;;AAC/D,MAAIO,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAFQ,CAEkB;;AACvC,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,2BACE,QAAC,kBAAD;AAAA,gBACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAsBC,GAAD,iBACpB,QAAC,WAAD;AAAA,gCACE;AACE,UAAA,GAAG,EAAEA,GAAG,CAACC,KAAJ,CAAUC,KAAV,CAAgBC,oBADvB;AAEE,UAAA,GAAG,EAAEH,GAAG,CAACC,KAAJ,CAAUG;AAFjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAA,oBAAKJ,GAAG,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,cADF;AAELC,YAAAA,MAAM,EAAE;AAFH,WADT;AAAA,oBAMGP,GAAG,CAACQ;AANP;AAAA;AAAA;AAAA;AAAA,gBANF,eAcE;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE,cADZ;AAELC,YAAAA,OAAO,EAAE,KAFJ;AAGLC,YAAAA,KAAK,EAAE,MAHF;AAILJ,YAAAA,MAAM,EAAE,QAJH;AAKLK,YAAAA,MAAM,EAAE,KALH;AAMLC,YAAAA,MAAM,EAAE;AANH;AADT;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA,SAAkBb,GAAG,CAACc,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CArCD;;AAuCA,eAAerB,QAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\n\n// QUERY:\n// gql imports graphql-tag that turns our string into a proper graphQL query.\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      title\n      author\n      description\n      price\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n        altText\n      }\n    }\n  }\n`;\n\nconst ProductsListStyles = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 60px;\n  text-align: center;\n`;\n\nconst ProductCard = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  img {\n    height: 180px;\n    width: 110px;\n    object-fit: cover;\n    margin: 10px auto;\n  }\n\n  h4 {\n    text-transform: uppercase;\n    font-family: var(--titleFont);\n  }\n`;\n\nconst Products = () => {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY); // useQuery returns data, errors and if it is currently loading so we destructure it.\n  if (loading) return <p>Loading...</p>; // TODO: Change for loader.\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div>\n      <ProductsListStyles>\n        {data.allProducts.map((elm) => (\n          <ProductCard key={elm.id}>\n            <img\n              src={elm.photo.image.publicUrlTransformed}\n              alt={elm.photo.altText}\n            />\n            <h4>{elm.title}</h4>\n            <p\n              style={{\n                color: 'var(--cream)',\n                margin: '7px',\n              }}\n            >\n              {elm.author}\n            </p>\n            <hr\n              style={{\n                backgroundColor: 'var(--cream)',\n                opacity: '0.4',\n                width: '30px',\n                margin: '0 auto',\n                height: '1px',\n                border: 'none',\n              }}\n            />\n          </ProductCard>\n        ))}\n      </ProductsListStyles>\n    </div>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}