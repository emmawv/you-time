{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emmawv/practice/you-time/client/components/CreateProduct.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useForm from '../lib/useForm';\nimport FormStyles from './styles/FormStyles';\n\nvar CreateProduct = function CreateProduct() {\n  _s();\n\n  // Instead of useState we create and use a custom hook to handle inputs.\n  var _useForm = useForm({\n    name: 'Best Book Ever',\n    price: 689,\n    description: 'So good'\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange; // {} instead of [] beacuse the retun is an object we are destructuring.\n\n\n  return /*#__PURE__*/_jsxDEV(FormStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: inputs.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: inputs.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateProduct, \"n0TdQFoD4Qj/31HRAHOFTTHiHGE=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateProduct;\nexport default CreateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProduct\");","map":{"version":3,"sources":["/Users/emmawv/practice/you-time/client/components/CreateProduct.js"],"names":["useState","useForm","FormStyles","CreateProduct","name","price","description","inputs","handleChange"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAC1B;AAD0B,iBAEOF,OAAO,CAAC;AACvCG,IAAAA,IAAI,EAAE,gBADiC;AAEvCC,IAAAA,KAAK,EAAE,GAFgC;AAGvCC,IAAAA,WAAW,EAAE;AAH0B,GAAD,CAFd;AAAA,MAElBC,MAFkB,YAElBA,MAFkB;AAAA,MAEVC,YAFU,YAEVA,YAFU,EAMtB;;;AACJ,sBACE,QAAC,UAAD;AAAA,4BACE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA,sCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,MAJd;AAKE,QAAA,KAAK,EAAED,MAAM,CAACH,IALhB;AAME,QAAA,QAAQ,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAYE;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA,uCAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,WAAW,EAAC,MAJd;AAKE,QAAA,KAAK,EAAED,MAAM,CAACH,IALhB;AAME,QAAA,QAAQ,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA0BD,CAjCD;;GAAML,a;UAE6BF,O;;;KAF7BE,a;AAmCN,eAAeA,aAAf","sourcesContent":["import { useState } from 'react';\nimport useForm from '../lib/useForm';\nimport FormStyles from './styles/FormStyles';\n\nconst CreateProduct = () => {\n  // Instead of useState we create and use a custom hook to handle inputs.\n  const { inputs, handleChange } = useForm({\n    name: 'Best Book Ever',\n    price: 689,\n    description: 'So good',\n  }); // {} instead of [] beacuse the retun is an object we are destructuring.\n  return (\n    <FormStyles>\n      <label htmlFor=\"name\">\n        Name\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Name\"\n          value={inputs.name}\n          onChange={handleChange}\n        />\n      </label>\n      <label htmlFor=\"name\">\n        Price\n        <input\n          type=\"number\"\n          id=\"price\"\n          name=\"name\"\n          placeholder=\"Name\"\n          value={inputs.name}\n          onChange={handleChange}\n        />\n      </label>\n    </FormStyles>\n  );\n};\n\nexport default CreateProduct;\n"]},"metadata":{},"sourceType":"module"}