{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/emmawv/practice/you-time/client/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/emmawv/practice/you-time/client/components/Products.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  padding: 10px;\\n  border: 1px solid var(--cream);\\n\\n  img {\\n    height: 180px;\\n    width: 110px;\\n    object-fit: cover;\\n    margin: 10px auto;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr;\\n  grid-gap: 60px;\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query ALL_PRODUCTS_QUERY {\\n    allProducts {\\n      id\\n      title\\n      author\\n      description\\n      price\\n      photo {\\n        id\\n        image {\\n          publicUrlTransformed\\n        }\\n        altText\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components'; // QUERY:\n// gql imports graphql-tag that turns our string into a proper graphQL query.\n\nvar ALL_PRODUCTS_QUERY = gql(_templateObject());\nvar ProductsList = styled.div(_templateObject2());\n_c = ProductsList;\nvar ProductCard = styled.div(_templateObject3());\n_c2 = ProductCard;\n\nvar Products = function Products() {\n  _s();\n\n  var _useQuery = useQuery(ALL_PRODUCTS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading; // useQuery returns data, errors and if it is currently loading so we destructure it.\n\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 23\n  }, _this); // TODO: Change for loader.\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 21\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ProductsList, {\n      children: data.allProducts.map(function (elm) {\n        return /*#__PURE__*/_jsxDEV(ProductCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: elm.photo.image.publicUrlTransformed,\n            alt: elm.photo.altText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: elm.title\n          }, elm.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Products, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c3 = Products;\nexport default Products;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProductsList\");\n$RefreshReg$(_c2, \"ProductCard\");\n$RefreshReg$(_c3, \"Products\");","map":{"version":3,"sources":["/Users/emmawv/practice/you-time/client/components/Products.js"],"names":["useQuery","gql","styled","ALL_PRODUCTS_QUERY","ProductsList","div","ProductCard","Products","data","error","loading","message","allProducts","map","elm","photo","image","publicUrlTransformed","altText","title","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;;AACA,IAAMC,kBAAkB,GAAGF,GAAH,mBAAxB;AAmBA,IAAMG,YAAY,GAAGF,MAAM,CAACG,GAAV,oBAAlB;KAAMD,Y;AAON,IAAME,WAAW,GAAGJ,MAAM,CAACG,GAAV,oBAAjB;MAAMC,W;;AAcN,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAAA,kBACYP,QAAQ,CAACG,kBAAD,CADpB;AAAA,MACbK,IADa,aACbA,IADa;AAAA,MACPC,KADO,aACPA,KADO;AAAA,MACAC,OADA,aACAA,OADA,EAC0C;;;AAC/D,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP,CAFQ,CAEkB;;AACvC,MAAID,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAK,CAACE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACX,sBACE;AAAA,2BACE,QAAC,YAAD;AAAA,gBACGH,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAACC,GAAD;AAAA,4BACpB,QAAC,WAAD;AAAA,kCACE;AACE,YAAA,GAAG,EAAEA,GAAG,CAACC,KAAJ,CAAUC,KAAV,CAAgBC,oBADvB;AAEE,YAAA,GAAG,EAAEH,GAAG,CAACC,KAAJ,CAAUG;AAFjB;AAAA;AAAA;AAAA;AAAA,mBADF,eAKE;AAAA,sBAAiBJ,GAAG,CAACK;AAArB,aAAQL,GAAG,CAACM,EAAZ;AAAA;AAAA;AAAA;AAAA,mBALF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADoB;AAAA,OAArB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAnBD;;GAAMb,Q;UAC6BP,Q;;;MAD7BO,Q;AAqBN,eAAeA,QAAf","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\n\n// QUERY:\n// gql imports graphql-tag that turns our string into a proper graphQL query.\nconst ALL_PRODUCTS_QUERY = gql`\n  query ALL_PRODUCTS_QUERY {\n    allProducts {\n      id\n      title\n      author\n      description\n      price\n      photo {\n        id\n        image {\n          publicUrlTransformed\n        }\n        altText\n      }\n    }\n  }\n`;\n\nconst ProductsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 60px;\n  text-align: center;\n`;\n\nconst ProductCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  border: 1px solid var(--cream);\n\n  img {\n    height: 180px;\n    width: 110px;\n    object-fit: cover;\n    margin: 10px auto;\n  }\n`;\n\nconst Products = () => {\n  const { data, error, loading } = useQuery(ALL_PRODUCTS_QUERY); // useQuery returns data, errors and if it is currently loading so we destructure it.\n  if (loading) return <p>Loading...</p>; // TODO: Change for loader.\n  if (error) return <p>Error: {error.message}</p>;\n  return (\n    <div>\n      <ProductsList>\n        {data.allProducts.map((elm) => (\n          <ProductCard>\n            <img\n              src={elm.photo.image.publicUrlTransformed}\n              alt={elm.photo.altText}\n            />\n            <p key={elm.id}>{elm.title}</p>\n          </ProductCard>\n        ))}\n      </ProductsList>\n    </div>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}